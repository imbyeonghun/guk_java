<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- url이 /resources 로 시작하면 /webapp 폴더 안에 있는 resources 폴더 안에 있는 파일들을 가져오도록 설정 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/download/**" location="file:///D:/uploads/" />

	<!-- 뷰 리졸버
		 controller에서 문자열을 리턴하면 InternalResourceViewResolver에서 어떤 화면을 연결할지 설정하는 코드
		 문자열 앞에 prefix를 붙이고, 뒤에 suffix를 자동으로 붙여준다.
	-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 타일즈 뷰 리졸버 추가 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
	    <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
	    <beans:property name="order" value="1" /><!-- 순서를 우선으로 지정 -->
	</beans:bean>
	     
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	    <beans:property name="definitions">
	        <beans:list>
	            <beans:value>/WEB-INF/spring/tiles-def.xml</beans:value>
	        </beans:list>
	    </beans:property>
	</beans:bean>
	
	<!-- 클래스들을 읽어올 수 있게 기본 패키지를 지정 -->
	<context:component-scan base-package="kr.kh.spring.*" />
	
	<!-- 
		LoginInterceptor 등록
		id : 객체명
		class : 경로 
	-->
	<beans:bean id="loginInterceptor" class="kr.kh.spring.interceptor.LoginInterceptor"/>
	<beans:bean id="memberInterceptor" class="kr.kh.spring.interceptor.MemberInterceptor"/>
	<beans:bean id="guestInterceptor" class="kr.kh.spring.interceptor.GuestInterceptor"/>
	
	<!-- 
		LoginInterceptor, MemberInterceptor가 실행될 URL지정 
		<beans:ref>에서 bean과 위 코드인 <beans:bean>태그의 id가 동일
	-->
	<interceptors>
	<!-- LoginInterceptor가 실행된 URL 지정 -->
		<interceptor>
			<mapping path="/login"/>
			<beans:ref bean="loginInterceptor" />
		</interceptor>
		<!-- MemberInterceptor가 실행된 URL 지정 -->
		<interceptor>
			<mapping path="/board/insert"/>
			<mapping path="/board/update"/>
			<mapping path="/board/delete"/>
			<mapping path="/mypage"/>
			<beans:ref bean="memberInterceptor" />
		</interceptor>
		<!-- GuestInterceptor가 실행된 URL 지정 -->
		<interceptor>
			<mapping path="/login"/>
			<mapping path="/signup"/>
			<mapping path="/find/pw"/>
			<beans:ref bean="guestInterceptor" />
		</interceptor>
	</interceptors>
	
	<!-- 첨부파일 용량 제한 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 업로드 최대 크기 10Mb = 10485760byte -->
		<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	
	<!-- 첨부파일을 업로드할 서버 경로 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="D:\\uploads"/>
	</beans:bean>
</beans:beans>
